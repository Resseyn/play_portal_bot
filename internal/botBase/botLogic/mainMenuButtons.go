package botLogic

import (
	"gopkg.in/telebot.v3"
	"play_portal_bot/internal/botBase/helpingMethods"
	"play_portal_bot/internal/loggers"
	"play_portal_bot/pkg/utils/structures"
)

func Menu(c telebot.Context) error {

	// =========PARAMS=========
	picPath := "pkg/utils/data/img/mainMenuImages/Hydra.webp"
	messageContent := "–ú–ê–ì–ê–ó–ò–ù –ò–ì–† '–ì–ò–î–†–ê'"
	commands := [][]structures.Command{
		{
			{Text: "–ú–∞–≥–∞–∑–∏–Ω", Command: structures.Commands["shop"]},
			{Text: "–ö–∞–±–∏–Ω–µ—Ç", Command: structures.Commands["personalCabinet"]}},
		{
			{Text: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", Command: structures.Commands["support"]},
			{Text: "FAQ", Command: structures.Commands["faq"]}},
	}
	data := helpingMethods.ParseData(c.Callback().Data)
	data.PrevCommand = ""
	// =========PARAMS=========

	delete(structures.UserStates, data.ChatID)

	keyboard := helpingMethods.CreateInline(data, commands...)
	err := c.Edit(&telebot.Photo{
		File:    telebot.FromDisk(picPath),
		Caption: messageContent,
	}, keyboard)
	if err != nil {
		loggers.ErrorLogger.Println(err)
		return err
	}
	return nil
}

func Shop(c telebot.Context) error {

	// =========PARAMS=========
	picPath := "pkg/utils/data/img/mainMenuImages/gettyimages-1067956982.jpg"
	messageContent := "–ú–ê–ì–ê–ó–ò–ù –ò–ì–† '–ì–ò–î–†–ê'"
	data := helpingMethods.ParseData(c.Callback().Data)
	data.PrevCommand = structures.Commands["mainMenu"]
	commands := [][]structures.Command{
		{
			{Text: "–ò–≥—Ä–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã", Command: structures.Commands["shop_gameServices"]},
			{Text: "–°–µ—Ä–≤–∏—Å—ã", Command: structures.Commands["shop_services"]}},
		{
			{Text: "Pepega(–Ω–∞—Å–≤–∞–π –Ω–µ –∑–∞–≤–µ–∑–ª–∏)", Command: structures.Commands[""]},
		}}
	// =========PARAMS=========

	keyboard := helpingMethods.CreateInline(data, commands...)
	err := c.Edit(&telebot.Photo{
		File:    telebot.FromDisk(picPath),
		Caption: messageContent,
	}, keyboard)
	if err != nil {
		loggers.ErrorLogger.Println(err)
		return err
	}
	return nil
}
func PersonalCabinet(c telebot.Context) error {

	// =========PARAMS=========
	picPath := "pkg/utils/data/img/mainMenuImages/lcImage.jpeg"
	messageContent := "–û–±—â–∏–µ –Ω–∞—Ä—ã"
	data := helpingMethods.ParseData(c.Callback().Data)
	data.PrevCommand = structures.Commands["mainMenu"]
	commands := [][]structures.Command{
		{
			{Text: "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Åüíò", Command: structures.Commands[""]}},
		{
			{Text: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥‚ùå", Command: structures.Commands[""]}},
		{
			{Text: "–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫‚öúÔ∏è", Command: structures.Commands[""]}},
	}
	// =========PARAMS=========

	keyboard := helpingMethods.CreateInline(data, commands...)
	err := c.Edit(&telebot.Photo{
		File:    telebot.FromDisk(picPath),
		Caption: messageContent,
	}, keyboard)
	if err != nil {
		loggers.ErrorLogger.Println(err)
		return err
	}
	return nil
}
func Support(c telebot.Context) error {

	// =========PARAMS=========
	picPath := "pkg/utils/data/img/mainMenuImages/best-hard-support-dota-2-heroes-1-e1687346780280.jpg"
	messageContent := "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–æ–∑–¥–∞–≤ —Ç–∏–∫–µ—Ç, –Ω–æ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º FAQ"
	data := helpingMethods.ParseData(c.Callback().Data)
	data.PrevCommand = structures.Commands["mainMenu"]
	commands := [][]structures.Command{
		{
			{Text: "–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç", Command: structures.Commands["createTicket"]}}}
	// =========PARAMS=========

	keyboard := helpingMethods.CreateInline(data, commands...)
	err := c.Edit(&telebot.Photo{
		File:    telebot.FromDisk(picPath),
		Caption: messageContent,
	}, keyboard)
	if err != nil {
		loggers.ErrorLogger.Println(err)
		return err
	}
	return nil
}
func FAQ(c telebot.Context) error {

	// =========PARAMS=========
	picPath := "pkg/utils/data/img/mainMenuImages/faq.png"
	messageContent := "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –ù–£ –ò –¢–ò–ü–û –°–°–´–õ–û–ß–ö–£ –°–Æ–î–ê –ê–ì–ê" //—Å—é–¥–∞ —Å—Å—ã–ª–∫—É
	data := helpingMethods.ParseData(c.Callback().Data)
	data.PrevCommand = structures.Commands["mainMenu"]
	commands := [][]structures.Command{
		{}}
	// =========PARAMS=========

	keyboard := helpingMethods.CreateInline(data, commands...)
	err := c.Edit(&telebot.Photo{
		File:    telebot.FromDisk(picPath),
		Caption: messageContent,
	}, keyboard)
	if err != nil {
		loggers.ErrorLogger.Println(err)
		return err
	}
	return nil
}
